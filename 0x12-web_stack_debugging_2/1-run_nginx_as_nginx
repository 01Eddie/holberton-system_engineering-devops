#!/usr/bin/env bash
# Run Nginx as Nginx

# kill apache2 instance
sudo service apache2 stop
pkill apache2

# configure nginx to run on port 8080
CONFIG_LOCATION='/etc/nginx/sites-available/default'
CONFIG="
server {
	listen 8080 default_server;
	listen [::]:8080 default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
#	location /hbnb_static/ {
#		alias /data/web_static/current/;
#	}

	#
	# include snippets/snakeoil.conf;

	root /var/www/html;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	server_name _;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}

	# pass PHP scripts to FastCGI server
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
	#	fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
}"
printf "%s" "$CONFIG" > "$CONFIG_LOCATION"

chown nginx /etc/nginx/nginx.conf
sudo -u nginx chmod 0644 /etc/nginx/nginx.conf

# restart nginx as nginx user
sudo -u nginx service nginx restart

